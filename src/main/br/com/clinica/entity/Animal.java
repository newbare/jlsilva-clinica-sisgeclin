package br.com.clinica.entity;
// Generated 26/03/2011 00:27:00 by Hibernate Tools 3.2.4.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Animal generated by hbm2java
 */
@Entity
@Table(name = "animal", schema = "public")
public class Animal implements java.io.Serializable {

	private int codanimal;
	private Clientes clientes;
	private Raca raca;
	private Pelagem pelagem;
	private String nome;
	private Date dtnascimento;
	private char sexo;
	private String cci;
	private String chip;
	private boolean pedigree;
	private boolean morto;
	private Date dtmorto;
	private String alergias;
	private String obs;
	private String motivo;
	private Set<Ficha> fichas = new HashSet<Ficha>(0);

	public Animal() {
	}

	public Animal(int codanimal, Clientes clientes, Pelagem pelagem,
			String nome, char sexo, boolean pedigree, boolean morto) {
		this.codanimal = codanimal;
		this.clientes = clientes;
		this.pelagem = pelagem;
		this.nome = nome;
		this.sexo = sexo;
		this.pedigree = pedigree;
		this.morto = morto;
	}

	public Animal(int codanimal, Clientes clientes, Raca raca, Pelagem pelagem,
			String nome, Date dtnascimento, char sexo, String cci, String chip,
			boolean pedigree, boolean morto, Date dtmorto, String alergias,
			String obs, String motivo, Set<Ficha> fichas) {
		this.codanimal = codanimal;
		this.clientes = clientes;
		this.raca = raca;
		this.pelagem = pelagem;
		this.nome = nome;
		this.dtnascimento = dtnascimento;
		this.sexo = sexo;
		this.cci = cci;
		this.chip = chip;
		this.pedigree = pedigree;
		this.morto = morto;
		this.dtmorto = dtmorto;
		this.alergias = alergias;
		this.obs = obs;
		this.motivo = motivo;
		this.fichas = fichas;
	}

	
	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE,generator = "id_animal")
	@SequenceGenerator( name = "id_animal", sequenceName = "id_animal")
	@Column(name = "codanimal", unique = true, nullable = false)
	public int getCodanimal() {
		return this.codanimal;
	}

	public void setCodanimal(int codanimal) {
		this.codanimal = codanimal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codclientes", nullable = false)
	@NotNull
	public Clientes getClientes() {
		return this.clientes;
	}

	public void setClientes(Clientes clientes) {
		this.clientes = clientes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codraca")
	public Raca getRaca() {
		return this.raca;
	}

	public void setRaca(Raca raca) {
		this.raca = raca;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codpelagem", nullable = false)
	@NotNull
	public Pelagem getPelagem() {
		return this.pelagem;
	}

	public void setPelagem(Pelagem pelagem) {
		this.pelagem = pelagem;
	}

	@Column(name = "nome", nullable = false, length = 50)
	@NotNull
	@Length(max = 50)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dtnascimento", length = 13)
	public Date getDtnascimento() {
		return this.dtnascimento;
	}

	public void setDtnascimento(Date dtnascimento) {
		this.dtnascimento = dtnascimento;
	}

	@Column(name = "sexo", nullable = false, length = 1)
	public char getSexo() {
		return this.sexo;
	}

	public void setSexo(char sexo) {
		this.sexo = sexo;
	}

	@Column(name = "cci", length = 50)
	@Length(max = 50)
	public String getCci() {
		return this.cci;
	}

	public void setCci(String cci) {
		this.cci = cci;
	}

	@Column(name = "chip", length = 50)
	@Length(max = 50)
	public String getChip() {
		return this.chip;
	}

	public void setChip(String chip) {
		this.chip = chip;
	}

	@Column(name = "pedigree", nullable = false)
	public boolean isPedigree() {
		return this.pedigree;
	}

	public void setPedigree(boolean pedigree) {
		this.pedigree = pedigree;
	}

	@Column(name = "morto", nullable = false)
	public boolean isMorto() {
		return this.morto;
	}

	public void setMorto(boolean morto) {
		this.morto = morto;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dtmorto", length = 13)
	public Date getDtmorto() {
		return this.dtmorto;
	}

	public void setDtmorto(Date dtmorto) {
		this.dtmorto = dtmorto;
	}

	@Column(name = "alergias", length = 50)
	@Length(max = 50)
	public String getAlergias() {
		return this.alergias;
	}

	public void setAlergias(String alergias) {
		this.alergias = alergias;
	}

	@Column(name = "obs")
	public String getObs() {
		return this.obs;
	}

	public void setObs(String obs) {
		this.obs = obs;
	}

	@Column(name = "motivo", length = 30)
	@Length(max = 30)
	public String getMotivo() {
		return this.motivo;
	}

	public void setMotivo(String motivo) {
		this.motivo = motivo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "animal")
	public Set<Ficha> getFichas() {
		return this.fichas;
	}

	public void setFichas(Set<Ficha> fichas) {
		this.fichas = fichas;
	}

}
