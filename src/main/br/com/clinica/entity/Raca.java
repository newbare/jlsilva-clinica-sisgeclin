package br.com.clinica.entity;

// Generated 26/03/2011 00:27:00 by Hibernate Tools 3.2.4.GA

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Raca generated by hbm2java
 */
@Entity
@Table(name = "raca", schema = "public")
public class Raca implements java.io.Serializable {

	private int codraca;
	private Especies especies;
	private String nomeraca;
	private Set<Animal> animals = new HashSet<Animal>(0);

	public Raca() {
	}

	public Raca(int codraca, Especies especies) {
		this.codraca = codraca;
		this.especies = especies;
	}

	public Raca(int codraca, Especies especies, String nomeraca,
			Set<Animal> animals) {
		this.codraca = codraca;
		this.especies = especies;
		this.nomeraca = nomeraca;
		this.animals = animals;
	}
@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE,generator = "id_raca")
	@SequenceGenerator( name = "id_raca", sequenceName = "id_raca")
	@Column(name = "codraca", unique = true, nullable = false)
	public int getCodraca() {
		return this.codraca;
	}

	public void setCodraca(int codraca) {
		this.codraca = codraca;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codespecie", nullable = false)
	@NotNull
	public Especies getEspecies() {
		return this.especies;
	}

	public void setEspecies(Especies especies) {
		this.especies = especies;
	}

	@Column(name = "nomeraca", length = 30)
	@Length(max = 30)
	public String getNomeraca() {
		return this.nomeraca;
	}

	public void setNomeraca(String nomeraca) {
		this.nomeraca = nomeraca;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "raca")
	public Set<Animal> getAnimals() {
		return this.animals;
	}

	public void setAnimals(Set<Animal> animals) {
		this.animals = animals;
	}

}
