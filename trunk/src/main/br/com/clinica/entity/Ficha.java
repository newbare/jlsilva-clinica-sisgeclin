package br.com.clinica.entity;

// Generated 26/03/2011 00:27:00 by Hibernate Tools 3.2.4.GA

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Ficha generated by hbm2java
 */
@Entity
@Table(name = "ficha", schema = "public")
public class Ficha implements java.io.Serializable {
	private static final long serialVersionUID = 462216157723572319L;
	private int codficha;
	private Animal animal;
	private String anamnese;
	private Date dtretorno;
	private String diagnostico;
	private Date dtregistro;
	private Float peso;
	private String solicitados;
	private String receituario;
	private Set<Exbiosanguinea> exbiosanguineas = new HashSet<Exbiosanguinea>(0);
	private Set<Internacao> internacaos = new HashSet<Internacao>(0);
	private Set<Exhemograma> exhemogramas = new HashSet<Exhemograma>(0);
	private Set<Exfezes> exfezeses = new HashSet<Exfezes>(0);
	private Set<Vacinacao> vacinacaos = new HashSet<Vacinacao>(0);
	private Set<Exurinalise> exurinalises = new HashSet<Exurinalise>(0);

	public Ficha() {
	}

	public Ficha(int codficha, Animal animal) {
		this.codficha = codficha;
		this.animal = animal;
	}

	public Ficha(int codficha, Animal animal, String anamnese, Date dtretorno,
			String diagnostico, Date dtregistro, Float peso,
			String solicitados, String receituario,
			Set<Exbiosanguinea> exbiosanguineas, Set<Internacao> internacaos,
			Set<Exhemograma> exhemogramas, Set<Exfezes> exfezeses,
			Set<Vacinacao> vacinacaos, Set<Exurinalise> exurinalises) {
		this.codficha = codficha;
		this.animal = animal;
		this.anamnese = anamnese;
		this.dtretorno = dtretorno;
		this.diagnostico = diagnostico;
		this.dtregistro = dtregistro;
		this.peso = peso;
		this.solicitados = solicitados;
		this.receituario = receituario;
		this.exbiosanguineas = exbiosanguineas;
		this.internacaos = internacaos;
		this.exhemogramas = exhemogramas;
		this.exfezeses = exfezeses;
		this.vacinacaos = vacinacaos;
		this.exurinalises = exurinalises;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.SEQUENCE,generator = "id_ficha")
	@SequenceGenerator( name = "id_ficha", sequenceName = "id_ficha")
	@Column(name = "codficha", unique = true, nullable = false)
	public int getCodficha() {
		return this.codficha;
	}

	public void setCodficha(int codficha) {
		this.codficha = codficha;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "codanimal", nullable = false)
	@NotNull
	public Animal getAnimal() {
		return this.animal;
	}

	public void setAnimal(Animal animal) {
		this.animal = animal;
	}

	@Column(name = "anamnese")
	public String getAnamnese() {
		return this.anamnese;
	}

	public void setAnamnese(String anamnese) {
		this.anamnese = anamnese;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dtretorno", length = 13)
	public Date getDtretorno() {
		return this.dtretorno;
	}

	public void setDtretorno(Date dtretorno) {
		this.dtretorno = dtretorno;
	}

	@Column(name = "diagnostico")
	public String getDiagnostico() {
		return this.diagnostico;
	}

	public void setDiagnostico(String diagnostico) {
		this.diagnostico = diagnostico;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dtregistro", length = 13)
	public Date getDtregistro() {
		return this.dtregistro;
	}

	public void setDtregistro(Date dtregistro) {
		this.dtregistro = dtregistro;
	}

	@Column(name = "peso", precision = 8, scale = 8)
	public Float getPeso() {
		return this.peso;
	}

	public void setPeso(Float peso) {
		this.peso = peso;
	}

	@Column(name = "solicitados", length = 100)
	@Length(max = 100)
	public String getSolicitados() {
		return this.solicitados;
	}

	public void setSolicitados(String solicitados) {
		this.solicitados = solicitados;
	}

	@Column(name = "receituario")
	public String getReceituario() {
		return this.receituario;
	}

	public void setReceituario(String receituario) {
		this.receituario = receituario;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ficha")
	public Set<Exbiosanguinea> getExbiosanguineas() {
		return this.exbiosanguineas;
	}

	public void setExbiosanguineas(Set<Exbiosanguinea> exbiosanguineas) {
		this.exbiosanguineas = exbiosanguineas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ficha")
	public Set<Internacao> getInternacaos() {
		return this.internacaos;
	}

	public void setInternacaos(Set<Internacao> internacaos) {
		this.internacaos = internacaos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ficha")
	public Set<Exhemograma> getExhemogramas() {
		return this.exhemogramas;
	}

	public void setExhemogramas(Set<Exhemograma> exhemogramas) {
		this.exhemogramas = exhemogramas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ficha")
	public Set<Exfezes> getExfezeses() {
		return this.exfezeses;
	}

	public void setExfezeses(Set<Exfezes> exfezeses) {
		this.exfezeses = exfezeses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ficha")
	public Set<Vacinacao> getVacinacaos() {
		return this.vacinacaos;
	}

	public void setVacinacaos(Set<Vacinacao> vacinacaos) {
		this.vacinacaos = vacinacaos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ficha")
	public Set<Exurinalise> getExurinalises() {
		return this.exurinalises;
	}

	public void setExurinalises(Set<Exurinalise> exurinalises) {
		this.exurinalises = exurinalises;
	}

}
